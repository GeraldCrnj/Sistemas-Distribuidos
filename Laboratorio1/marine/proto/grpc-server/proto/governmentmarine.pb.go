// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.6
// source: governmentmarine.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AlertMarineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlertMarineRequest) Reset() {
	*x = AlertMarineRequest{}
	mi := &file_governmentmarine_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertMarineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertMarineRequest) ProtoMessage() {}

func (x *AlertMarineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_governmentmarine_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertMarineRequest.ProtoReflect.Descriptor instead.
func (*AlertMarineRequest) Descriptor() ([]byte, []int) {
	return file_governmentmarine_proto_rawDescGZIP(), []int{0}
}

type AlertMarineResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlertMarineResponse) Reset() {
	*x = AlertMarineResponse{}
	mi := &file_governmentmarine_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertMarineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertMarineResponse) ProtoMessage() {}

func (x *AlertMarineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_governmentmarine_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertMarineResponse.ProtoReflect.Descriptor instead.
func (*AlertMarineResponse) Descriptor() ([]byte, []int) {
	return file_governmentmarine_proto_rawDescGZIP(), []int{1}
}

type GetWantedPiratesFromMarineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWantedPiratesFromMarineRequest) Reset() {
	*x = GetWantedPiratesFromMarineRequest{}
	mi := &file_governmentmarine_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWantedPiratesFromMarineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWantedPiratesFromMarineRequest) ProtoMessage() {}

func (x *GetWantedPiratesFromMarineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_governmentmarine_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWantedPiratesFromMarineRequest.ProtoReflect.Descriptor instead.
func (*GetWantedPiratesFromMarineRequest) Descriptor() ([]byte, []int) {
	return file_governmentmarine_proto_rawDescGZIP(), []int{2}
}

type GetWantedPiratesFromMarineResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pirates       []*Pirate              `protobuf:"bytes,1,rep,name=pirates,proto3" json:"pirates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWantedPiratesFromMarineResponse) Reset() {
	*x = GetWantedPiratesFromMarineResponse{}
	mi := &file_governmentmarine_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWantedPiratesFromMarineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWantedPiratesFromMarineResponse) ProtoMessage() {}

func (x *GetWantedPiratesFromMarineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_governmentmarine_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWantedPiratesFromMarineResponse.ProtoReflect.Descriptor instead.
func (*GetWantedPiratesFromMarineResponse) Descriptor() ([]byte, []int) {
	return file_governmentmarine_proto_rawDescGZIP(), []int{3}
}

func (x *GetWantedPiratesFromMarineResponse) GetPirates() []*Pirate {
	if x != nil {
		return x.Pirates
	}
	return nil
}

type BountyHunterReputationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BountyHunterId int32                  `protobuf:"varint,1,opt,name=BountyHunterId,proto3" json:"BountyHunterId,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BountyHunterReputationRequest) Reset() {
	*x = BountyHunterReputationRequest{}
	mi := &file_governmentmarine_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BountyHunterReputationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BountyHunterReputationRequest) ProtoMessage() {}

func (x *BountyHunterReputationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_governmentmarine_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BountyHunterReputationRequest.ProtoReflect.Descriptor instead.
func (*BountyHunterReputationRequest) Descriptor() ([]byte, []int) {
	return file_governmentmarine_proto_rawDescGZIP(), []int{4}
}

func (x *BountyHunterReputationRequest) GetBountyHunterId() int32 {
	if x != nil {
		return x.BountyHunterId
	}
	return 0
}

type BountyHunterReputationResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	BountyHunterReputation int32                  `protobuf:"varint,1,opt,name=BountyHunterReputation,proto3" json:"BountyHunterReputation,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *BountyHunterReputationResponse) Reset() {
	*x = BountyHunterReputationResponse{}
	mi := &file_governmentmarine_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BountyHunterReputationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BountyHunterReputationResponse) ProtoMessage() {}

func (x *BountyHunterReputationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_governmentmarine_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BountyHunterReputationResponse.ProtoReflect.Descriptor instead.
func (*BountyHunterReputationResponse) Descriptor() ([]byte, []int) {
	return file_governmentmarine_proto_rawDescGZIP(), []int{5}
}

func (x *BountyHunterReputationResponse) GetBountyHunterReputation() int32 {
	if x != nil {
		return x.BountyHunterReputation
	}
	return 0
}

type TooManySellsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BountyHunterId int32                  `protobuf:"varint,1,opt,name=BountyHunterId,proto3" json:"BountyHunterId,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TooManySellsRequest) Reset() {
	*x = TooManySellsRequest{}
	mi := &file_governmentmarine_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TooManySellsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TooManySellsRequest) ProtoMessage() {}

func (x *TooManySellsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_governmentmarine_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TooManySellsRequest.ProtoReflect.Descriptor instead.
func (*TooManySellsRequest) Descriptor() ([]byte, []int) {
	return file_governmentmarine_proto_rawDescGZIP(), []int{6}
}

func (x *TooManySellsRequest) GetBountyHunterId() int32 {
	if x != nil {
		return x.BountyHunterId
	}
	return 0
}

type TooManySellsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TooManySells  bool                   `protobuf:"varint,1,opt,name=tooManySells,proto3" json:"tooManySells,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TooManySellsResponse) Reset() {
	*x = TooManySellsResponse{}
	mi := &file_governmentmarine_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TooManySellsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TooManySellsResponse) ProtoMessage() {}

func (x *TooManySellsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_governmentmarine_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TooManySellsResponse.ProtoReflect.Descriptor instead.
func (*TooManySellsResponse) Descriptor() ([]byte, []int) {
	return file_governmentmarine_proto_rawDescGZIP(), []int{7}
}

func (x *TooManySellsResponse) GetTooManySells() bool {
	if x != nil {
		return x.TooManySells
	}
	return false
}

type SendMarineCaptureReportRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Pirate         *Pirate                `protobuf:"bytes,1,opt,name=pirate,proto3" json:"pirate,omitempty"`
	BountyHunterId int32                  `protobuf:"varint,2,opt,name=BountyHunterId,proto3" json:"BountyHunterId,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SendMarineCaptureReportRequest) Reset() {
	*x = SendMarineCaptureReportRequest{}
	mi := &file_governmentmarine_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMarineCaptureReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMarineCaptureReportRequest) ProtoMessage() {}

func (x *SendMarineCaptureReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_governmentmarine_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMarineCaptureReportRequest.ProtoReflect.Descriptor instead.
func (*SendMarineCaptureReportRequest) Descriptor() ([]byte, []int) {
	return file_governmentmarine_proto_rawDescGZIP(), []int{8}
}

func (x *SendMarineCaptureReportRequest) GetPirate() *Pirate {
	if x != nil {
		return x.Pirate
	}
	return nil
}

func (x *SendMarineCaptureReportRequest) GetBountyHunterId() int32 {
	if x != nil {
		return x.BountyHunterId
	}
	return 0
}

type SendMarineCaptureReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMarineCaptureReportResponse) Reset() {
	*x = SendMarineCaptureReportResponse{}
	mi := &file_governmentmarine_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMarineCaptureReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMarineCaptureReportResponse) ProtoMessage() {}

func (x *SendMarineCaptureReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_governmentmarine_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMarineCaptureReportResponse.ProtoReflect.Descriptor instead.
func (*SendMarineCaptureReportResponse) Descriptor() ([]byte, []int) {
	return file_governmentmarine_proto_rawDescGZIP(), []int{9}
}

var File_governmentmarine_proto protoreflect.FileDescriptor

const file_governmentmarine_proto_rawDesc = "" +
	"\n" +
	"\x16governmentmarine.proto\x12\x10governmentmarine\x1a\fshared.proto\"\x14\n" +
	"\x12AlertMarineRequest\"\x15\n" +
	"\x13AlertMarineResponse\"#\n" +
	"!GetWantedPiratesFromMarineRequest\"N\n" +
	"\"GetWantedPiratesFromMarineResponse\x12(\n" +
	"\apirates\x18\x01 \x03(\v2\x0e.shared.PirateR\apirates\"G\n" +
	"\x1dBountyHunterReputationRequest\x12&\n" +
	"\x0eBountyHunterId\x18\x01 \x01(\x05R\x0eBountyHunterId\"X\n" +
	"\x1eBountyHunterReputationResponse\x126\n" +
	"\x16BountyHunterReputation\x18\x01 \x01(\x05R\x16BountyHunterReputation\"=\n" +
	"\x13TooManySellsRequest\x12&\n" +
	"\x0eBountyHunterId\x18\x01 \x01(\x05R\x0eBountyHunterId\":\n" +
	"\x14TooManySellsResponse\x12\"\n" +
	"\ftooManySells\x18\x01 \x01(\bR\ftooManySells\"p\n" +
	"\x1eSendMarineCaptureReportRequest\x12&\n" +
	"\x06pirate\x18\x01 \x01(\v2\x0e.shared.PirateR\x06pirate\x12&\n" +
	"\x0eBountyHunterId\x18\x02 \x01(\x05R\x0eBountyHunterId\"!\n" +
	"\x1fSendMarineCaptureReportResponse2\xf6\x04\n" +
	"\x10GovernmentMarine\x12\x80\x01\n" +
	"\x17SendMarineCaptureReport\x120.governmentmarine.SendMarineCaptureReportRequest\x1a1.governmentmarine.SendMarineCaptureReportResponse\"\x00\x12\\\n" +
	"\vAlertMarine\x12$.governmentmarine.AlertMarineRequest\x1a%.governmentmarine.AlertMarineResponse\"\x00\x12\x89\x01\n" +
	"\x1aGetWantedPiratesFromMarine\x123.governmentmarine.GetWantedPiratesFromMarineRequest\x1a4.governmentmarine.GetWantedPiratesFromMarineResponse\"\x00\x12\x80\x01\n" +
	"\x19GetBountyHunterReputation\x12/.governmentmarine.BountyHunterReputationRequest\x1a0.governmentmarine.BountyHunterReputationResponse\"\x00\x12r\n" +
	"\x1fCheckIfTooManySellsToUnderworld\x12%.governmentmarine.TooManySellsRequest\x1a&.governmentmarine.TooManySellsResponse\"\x00B\x13Z\x11grpc-server/protob\x06proto3"

var (
	file_governmentmarine_proto_rawDescOnce sync.Once
	file_governmentmarine_proto_rawDescData []byte
)

func file_governmentmarine_proto_rawDescGZIP() []byte {
	file_governmentmarine_proto_rawDescOnce.Do(func() {
		file_governmentmarine_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_governmentmarine_proto_rawDesc), len(file_governmentmarine_proto_rawDesc)))
	})
	return file_governmentmarine_proto_rawDescData
}

var file_governmentmarine_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_governmentmarine_proto_goTypes = []any{
	(*AlertMarineRequest)(nil),                 // 0: governmentmarine.AlertMarineRequest
	(*AlertMarineResponse)(nil),                // 1: governmentmarine.AlertMarineResponse
	(*GetWantedPiratesFromMarineRequest)(nil),  // 2: governmentmarine.GetWantedPiratesFromMarineRequest
	(*GetWantedPiratesFromMarineResponse)(nil), // 3: governmentmarine.GetWantedPiratesFromMarineResponse
	(*BountyHunterReputationRequest)(nil),      // 4: governmentmarine.BountyHunterReputationRequest
	(*BountyHunterReputationResponse)(nil),     // 5: governmentmarine.BountyHunterReputationResponse
	(*TooManySellsRequest)(nil),                // 6: governmentmarine.TooManySellsRequest
	(*TooManySellsResponse)(nil),               // 7: governmentmarine.TooManySellsResponse
	(*SendMarineCaptureReportRequest)(nil),     // 8: governmentmarine.SendMarineCaptureReportRequest
	(*SendMarineCaptureReportResponse)(nil),    // 9: governmentmarine.SendMarineCaptureReportResponse
	(*Pirate)(nil),                             // 10: shared.Pirate
}
var file_governmentmarine_proto_depIdxs = []int32{
	10, // 0: governmentmarine.GetWantedPiratesFromMarineResponse.pirates:type_name -> shared.Pirate
	10, // 1: governmentmarine.SendMarineCaptureReportRequest.pirate:type_name -> shared.Pirate
	8,  // 2: governmentmarine.GovernmentMarine.SendMarineCaptureReport:input_type -> governmentmarine.SendMarineCaptureReportRequest
	0,  // 3: governmentmarine.GovernmentMarine.AlertMarine:input_type -> governmentmarine.AlertMarineRequest
	2,  // 4: governmentmarine.GovernmentMarine.GetWantedPiratesFromMarine:input_type -> governmentmarine.GetWantedPiratesFromMarineRequest
	4,  // 5: governmentmarine.GovernmentMarine.GetBountyHunterReputation:input_type -> governmentmarine.BountyHunterReputationRequest
	6,  // 6: governmentmarine.GovernmentMarine.CheckIfTooManySellsToUnderworld:input_type -> governmentmarine.TooManySellsRequest
	9,  // 7: governmentmarine.GovernmentMarine.SendMarineCaptureReport:output_type -> governmentmarine.SendMarineCaptureReportResponse
	1,  // 8: governmentmarine.GovernmentMarine.AlertMarine:output_type -> governmentmarine.AlertMarineResponse
	3,  // 9: governmentmarine.GovernmentMarine.GetWantedPiratesFromMarine:output_type -> governmentmarine.GetWantedPiratesFromMarineResponse
	5,  // 10: governmentmarine.GovernmentMarine.GetBountyHunterReputation:output_type -> governmentmarine.BountyHunterReputationResponse
	7,  // 11: governmentmarine.GovernmentMarine.CheckIfTooManySellsToUnderworld:output_type -> governmentmarine.TooManySellsResponse
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_governmentmarine_proto_init() }
func file_governmentmarine_proto_init() {
	if File_governmentmarine_proto != nil {
		return
	}
	file_shared_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_governmentmarine_proto_rawDesc), len(file_governmentmarine_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_governmentmarine_proto_goTypes,
		DependencyIndexes: file_governmentmarine_proto_depIdxs,
		MessageInfos:      file_governmentmarine_proto_msgTypes,
	}.Build()
	File_governmentmarine_proto = out.File
	file_governmentmarine_proto_goTypes = nil
	file_governmentmarine_proto_depIdxs = nil
}
