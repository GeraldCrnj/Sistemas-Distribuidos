// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.6
// source: bountyhuntersmarine.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SellMarineRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BountyhunterId int32                  `protobuf:"varint,1,opt,name=BountyhunterId,proto3" json:"BountyhunterId,omitempty"`
	Pirate         *Pirate                `protobuf:"bytes,2,opt,name=pirate,proto3" json:"pirate,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SellMarineRequest) Reset() {
	*x = SellMarineRequest{}
	mi := &file_bountyhuntersmarine_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SellMarineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellMarineRequest) ProtoMessage() {}

func (x *SellMarineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bountyhuntersmarine_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellMarineRequest.ProtoReflect.Descriptor instead.
func (*SellMarineRequest) Descriptor() ([]byte, []int) {
	return file_bountyhuntersmarine_proto_rawDescGZIP(), []int{0}
}

func (x *SellMarineRequest) GetBountyhunterId() int32 {
	if x != nil {
		return x.BountyhunterId
	}
	return 0
}

func (x *SellMarineRequest) GetPirate() *Pirate {
	if x != nil {
		return x.Pirate
	}
	return nil
}

type SellMarineResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    int32                  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"` // 0: Éxito, 1: Pago reducido por sobreactividad, 2: Rechazo por reputación, 3: Rechazo por pirata ya entregado
	Payment       int32                  `protobuf:"varint,2,opt,name=payment,proto3" json:"payment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SellMarineResponse) Reset() {
	*x = SellMarineResponse{}
	mi := &file_bountyhuntersmarine_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SellMarineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellMarineResponse) ProtoMessage() {}

func (x *SellMarineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bountyhuntersmarine_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellMarineResponse.ProtoReflect.Descriptor instead.
func (*SellMarineResponse) Descriptor() ([]byte, []int) {
	return file_bountyhuntersmarine_proto_rawDescGZIP(), []int{1}
}

func (x *SellMarineResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *SellMarineResponse) GetPayment() int32 {
	if x != nil {
		return x.Payment
	}
	return 0
}

type MarineConfiscatingRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PirateCatched  *Pirate                `protobuf:"bytes,1,opt,name=pirateCatched,proto3" json:"pirateCatched,omitempty"`
	BountyHunterId int32                  `protobuf:"varint,2,opt,name=BountyHunterId,proto3" json:"BountyHunterId,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MarineConfiscatingRequest) Reset() {
	*x = MarineConfiscatingRequest{}
	mi := &file_bountyhuntersmarine_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarineConfiscatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarineConfiscatingRequest) ProtoMessage() {}

func (x *MarineConfiscatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bountyhuntersmarine_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarineConfiscatingRequest.ProtoReflect.Descriptor instead.
func (*MarineConfiscatingRequest) Descriptor() ([]byte, []int) {
	return file_bountyhuntersmarine_proto_rawDescGZIP(), []int{2}
}

func (x *MarineConfiscatingRequest) GetPirateCatched() *Pirate {
	if x != nil {
		return x.PirateCatched
	}
	return nil
}

func (x *MarineConfiscatingRequest) GetBountyHunterId() int32 {
	if x != nil {
		return x.BountyHunterId
	}
	return 0
}

type MarineConfiscatingResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	IsMarineConfiscating bool                   `protobuf:"varint,1,opt,name=isMarineConfiscating,proto3" json:"isMarineConfiscating,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *MarineConfiscatingResponse) Reset() {
	*x = MarineConfiscatingResponse{}
	mi := &file_bountyhuntersmarine_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarineConfiscatingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarineConfiscatingResponse) ProtoMessage() {}

func (x *MarineConfiscatingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bountyhuntersmarine_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarineConfiscatingResponse.ProtoReflect.Descriptor instead.
func (*MarineConfiscatingResponse) Descriptor() ([]byte, []int) {
	return file_bountyhuntersmarine_proto_rawDescGZIP(), []int{3}
}

func (x *MarineConfiscatingResponse) GetIsMarineConfiscating() bool {
	if x != nil {
		return x.IsMarineConfiscating
	}
	return false
}

var File_bountyhuntersmarine_proto protoreflect.FileDescriptor

const file_bountyhuntersmarine_proto_rawDesc = "" +
	"\n" +
	"\x19bountyhuntersmarine.proto\x12\x13bountyhuntersmarine\x1a\fshared.proto\"c\n" +
	"\x11SellMarineRequest\x12&\n" +
	"\x0eBountyhunterId\x18\x01 \x01(\x05R\x0eBountyhunterId\x12&\n" +
	"\x06pirate\x18\x02 \x01(\v2\x0e.shared.PirateR\x06pirate\"N\n" +
	"\x12SellMarineResponse\x12\x1e\n" +
	"\n" +
	"statusCode\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x18\n" +
	"\apayment\x18\x02 \x01(\x05R\apayment\"y\n" +
	"\x19MarineConfiscatingRequest\x124\n" +
	"\rpirateCatched\x18\x01 \x01(\v2\x0e.shared.PirateR\rpirateCatched\x12&\n" +
	"\x0eBountyHunterId\x18\x02 \x01(\x05R\x0eBountyHunterId\"P\n" +
	"\x1aMarineConfiscatingResponse\x122\n" +
	"\x14isMarineConfiscating\x18\x01 \x01(\bR\x14isMarineConfiscating2\xfe\x01\n" +
	"\x1aBountyhuntersMarineService\x12_\n" +
	"\n" +
	"SellPirate\x12&.bountyhuntersmarine.SellMarineRequest\x1a'.bountyhuntersmarine.SellMarineResponse\"\x00\x12\x7f\n" +
	"\x1aIsMarineConfiscatingPirate\x12..bountyhuntersmarine.MarineConfiscatingRequest\x1a/.bountyhuntersmarine.MarineConfiscatingResponse\"\x00B\x13Z\x11grpc-server/protob\x06proto3"

var (
	file_bountyhuntersmarine_proto_rawDescOnce sync.Once
	file_bountyhuntersmarine_proto_rawDescData []byte
)

func file_bountyhuntersmarine_proto_rawDescGZIP() []byte {
	file_bountyhuntersmarine_proto_rawDescOnce.Do(func() {
		file_bountyhuntersmarine_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bountyhuntersmarine_proto_rawDesc), len(file_bountyhuntersmarine_proto_rawDesc)))
	})
	return file_bountyhuntersmarine_proto_rawDescData
}

var file_bountyhuntersmarine_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_bountyhuntersmarine_proto_goTypes = []any{
	(*SellMarineRequest)(nil),          // 0: bountyhuntersmarine.SellMarineRequest
	(*SellMarineResponse)(nil),         // 1: bountyhuntersmarine.SellMarineResponse
	(*MarineConfiscatingRequest)(nil),  // 2: bountyhuntersmarine.MarineConfiscatingRequest
	(*MarineConfiscatingResponse)(nil), // 3: bountyhuntersmarine.MarineConfiscatingResponse
	(*Pirate)(nil),                     // 4: shared.Pirate
}
var file_bountyhuntersmarine_proto_depIdxs = []int32{
	4, // 0: bountyhuntersmarine.SellMarineRequest.pirate:type_name -> shared.Pirate
	4, // 1: bountyhuntersmarine.MarineConfiscatingRequest.pirateCatched:type_name -> shared.Pirate
	0, // 2: bountyhuntersmarine.BountyhuntersMarineService.SellPirate:input_type -> bountyhuntersmarine.SellMarineRequest
	2, // 3: bountyhuntersmarine.BountyhuntersMarineService.IsMarineConfiscatingPirate:input_type -> bountyhuntersmarine.MarineConfiscatingRequest
	1, // 4: bountyhuntersmarine.BountyhuntersMarineService.SellPirate:output_type -> bountyhuntersmarine.SellMarineResponse
	3, // 5: bountyhuntersmarine.BountyhuntersMarineService.IsMarineConfiscatingPirate:output_type -> bountyhuntersmarine.MarineConfiscatingResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_bountyhuntersmarine_proto_init() }
func file_bountyhuntersmarine_proto_init() {
	if File_bountyhuntersmarine_proto != nil {
		return
	}
	file_shared_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bountyhuntersmarine_proto_rawDesc), len(file_bountyhuntersmarine_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bountyhuntersmarine_proto_goTypes,
		DependencyIndexes: file_bountyhuntersmarine_proto_depIdxs,
		MessageInfos:      file_bountyhuntersmarine_proto_msgTypes,
	}.Build()
	File_bountyhuntersmarine_proto = out.File
	file_bountyhuntersmarine_proto_goTypes = nil
	file_bountyhuntersmarine_proto_depIdxs = nil
}
