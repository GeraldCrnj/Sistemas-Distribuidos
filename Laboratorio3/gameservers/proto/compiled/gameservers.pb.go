// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: gameservers/proto/gameservers.proto

package compiled

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AssignMatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchId       string                 `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	PlayerIds     []string               `protobuf:"bytes,2,rep,name=player_ids,json=playerIds,proto3" json:"player_ids,omitempty"`
	VectorClock   map[string]int32       `protobuf:"bytes,3,rep,name=vector_clock,json=vectorClock,proto3" json:"vector_clock,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignMatchRequest) Reset() {
	*x = AssignMatchRequest{}
	mi := &file_gameservers_proto_gameservers_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignMatchRequest) ProtoMessage() {}

func (x *AssignMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gameservers_proto_gameservers_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignMatchRequest.ProtoReflect.Descriptor instead.
func (*AssignMatchRequest) Descriptor() ([]byte, []int) {
	return file_gameservers_proto_gameservers_proto_rawDescGZIP(), []int{0}
}

func (x *AssignMatchRequest) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *AssignMatchRequest) GetPlayerIds() []string {
	if x != nil {
		return x.PlayerIds
	}
	return nil
}

func (x *AssignMatchRequest) GetVectorClock() map[string]int32 {
	if x != nil {
		return x.VectorClock
	}
	return nil
}

type AssignMatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    int32                  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"` // 0: ok, 1: error
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	VectorClock   map[string]int32       `protobuf:"bytes,3,rep,name=vector_clock,json=vectorClock,proto3" json:"vector_clock,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignMatchResponse) Reset() {
	*x = AssignMatchResponse{}
	mi := &file_gameservers_proto_gameservers_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignMatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignMatchResponse) ProtoMessage() {}

func (x *AssignMatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gameservers_proto_gameservers_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignMatchResponse.ProtoReflect.Descriptor instead.
func (*AssignMatchResponse) Descriptor() ([]byte, []int) {
	return file_gameservers_proto_gameservers_proto_rawDescGZIP(), []int{1}
}

func (x *AssignMatchResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *AssignMatchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AssignMatchResponse) GetVectorClock() map[string]int32 {
	if x != nil {
		return x.VectorClock
	}
	return nil
}

type ServerId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      int32                  `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerId) Reset() {
	*x = ServerId{}
	mi := &file_gameservers_proto_gameservers_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerId) ProtoMessage() {}

func (x *ServerId) ProtoReflect() protoreflect.Message {
	mi := &file_gameservers_proto_gameservers_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerId.ProtoReflect.Descriptor instead.
func (*ServerId) Descriptor() ([]byte, []int) {
	return file_gameservers_proto_gameservers_proto_rawDescGZIP(), []int{2}
}

func (x *ServerId) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    int32                  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"` // 0: ok, 1: error
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_gameservers_proto_gameservers_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gameservers_proto_gameservers_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_gameservers_proto_gameservers_proto_rawDescGZIP(), []int{3}
}

func (x *PingResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

var File_gameservers_proto_gameservers_proto protoreflect.FileDescriptor

const file_gameservers_proto_gameservers_proto_rawDesc = "" +
	"\n" +
	"#gameservers/proto/gameservers.proto\x12\x11gameserversserver\"\xe9\x01\n" +
	"\x12AssignMatchRequest\x12\x19\n" +
	"\bmatch_id\x18\x01 \x01(\tR\amatchId\x12\x1d\n" +
	"\n" +
	"player_ids\x18\x02 \x03(\tR\tplayerIds\x12Y\n" +
	"\fvector_clock\x18\x03 \x03(\v26.gameserversserver.AssignMatchRequest.VectorClockEntryR\vvectorClock\x1a>\n" +
	"\x10VectorClockEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xec\x01\n" +
	"\x13AssignMatchResponse\x12\x1f\n" +
	"\vstatus_code\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12Z\n" +
	"\fvector_clock\x18\x03 \x03(\v27.gameserversserver.AssignMatchResponse.VectorClockEntryR\vvectorClock\x1a>\n" +
	"\x10VectorClockEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"'\n" +
	"\bServerId\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\x05R\bserverId\"/\n" +
	"\fPingResponse\x12\x1f\n" +
	"\vstatus_code\x18\x01 \x01(\x05R\n" +
	"statusCode2\xbe\x01\n" +
	"\x12GameServersService\x12\\\n" +
	"\vAssignMatch\x12%.gameserversserver.AssignMatchRequest\x1a&.gameserversserver.AssignMatchResponse\x12J\n" +
	"\n" +
	"PingServer\x12\x1b.gameserversserver.ServerId\x1a\x1f.gameserversserver.PingResponseB\x1cZ\x1agameservers/proto/compiledb\x06proto3"

var (
	file_gameservers_proto_gameservers_proto_rawDescOnce sync.Once
	file_gameservers_proto_gameservers_proto_rawDescData []byte
)

func file_gameservers_proto_gameservers_proto_rawDescGZIP() []byte {
	file_gameservers_proto_gameservers_proto_rawDescOnce.Do(func() {
		file_gameservers_proto_gameservers_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gameservers_proto_gameservers_proto_rawDesc), len(file_gameservers_proto_gameservers_proto_rawDesc)))
	})
	return file_gameservers_proto_gameservers_proto_rawDescData
}

var file_gameservers_proto_gameservers_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_gameservers_proto_gameservers_proto_goTypes = []any{
	(*AssignMatchRequest)(nil),  // 0: gameserversserver.AssignMatchRequest
	(*AssignMatchResponse)(nil), // 1: gameserversserver.AssignMatchResponse
	(*ServerId)(nil),            // 2: gameserversserver.ServerId
	(*PingResponse)(nil),        // 3: gameserversserver.PingResponse
	nil,                         // 4: gameserversserver.AssignMatchRequest.VectorClockEntry
	nil,                         // 5: gameserversserver.AssignMatchResponse.VectorClockEntry
}
var file_gameservers_proto_gameservers_proto_depIdxs = []int32{
	4, // 0: gameserversserver.AssignMatchRequest.vector_clock:type_name -> gameserversserver.AssignMatchRequest.VectorClockEntry
	5, // 1: gameserversserver.AssignMatchResponse.vector_clock:type_name -> gameserversserver.AssignMatchResponse.VectorClockEntry
	0, // 2: gameserversserver.GameServersService.AssignMatch:input_type -> gameserversserver.AssignMatchRequest
	2, // 3: gameserversserver.GameServersService.PingServer:input_type -> gameserversserver.ServerId
	1, // 4: gameserversserver.GameServersService.AssignMatch:output_type -> gameserversserver.AssignMatchResponse
	3, // 5: gameserversserver.GameServersService.PingServer:output_type -> gameserversserver.PingResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_gameservers_proto_gameservers_proto_init() }
func file_gameservers_proto_gameservers_proto_init() {
	if File_gameservers_proto_gameservers_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gameservers_proto_gameservers_proto_rawDesc), len(file_gameservers_proto_gameservers_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gameservers_proto_gameservers_proto_goTypes,
		DependencyIndexes: file_gameservers_proto_gameservers_proto_depIdxs,
		MessageInfos:      file_gameservers_proto_gameservers_proto_msgTypes,
	}.Build()
	File_gameservers_proto_gameservers_proto = out.File
	file_gameservers_proto_gameservers_proto_goTypes = nil
	file_gameservers_proto_gameservers_proto_depIdxs = nil
}
